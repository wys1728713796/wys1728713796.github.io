{"meta":{"title":"Hexo","subtitle":"","description":null,"author":"wys1728713796","url":"https://wys1728713796.github.io","root":"/"},"pages":[],"posts":[{"title":"变量","slug":"变量","date":"2021-05-07T05:46:00.702Z","updated":"2021-05-07T05:55:39.205Z","comments":true,"path":"2021/05/07/变量/","link":"","permalink":"https://wys1728713796.github.io/2021/05/07/%E5%8F%98%E9%87%8F/","excerpt":"","text":"一、变量的定义在程序运行期间，随时可能产生一些临时数据，应用程序会将这些数据保存在一些内存单元中，每个内存单元都用一个标识符来标识。这些内存单元被称为变量，定义的标识符就是变量名，内存单元中存储的数据就是变量的值。 二、变量的类型在Java语言中，所有的变量在使用前必须声明。声明变量的基本格式如下：格式说明：数据类型 变量名；（可以使用逗号隔开来声明多个同类型变量。） 以下列出了一些变量的声明实例。注意有些包含了初始化过程。 int a, b, c; // 声明三个int型整数：a、 b、cint d = 3, e = 4, f = 5; // 声明三个整数并赋予初值byte z = 22; // 声明并初始化 zString s = &quot;runoob&quot;; // 声明并初始化字符串 sdouble pi = 3.14159; // 声明了双精度浮点型变量 pichar x = &#x27;x&#x27;; // 声明变量 x 的值是字符 &#x27;x&#x27;。 Java语言支持的变量类型有： 类变量：独立于方法之外的变量，用 static 修饰。实例变量：独立于方法之外的变量，不过没有 static 修饰。局部变量：类的方法中的变量。 三、基本数据类型Java语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。 byte： byte 数据类型是8位、有符号的，以二进制补码表示的整数；最小值是 -128（-2^7）；最大值是 127（2^7-1）；默认值是 0；byte 类型用在大型数组中节约空间，主要代替整数，因为 byte 变量占用的空间只有 int 类型的四分之一；例子：byte a = 100，byte b = -50。 short： short 数据类型是 16 位、有符号的以二进制补码表示的整数最小值是 -32768（-2^15）；最大值是 32767（2^15 - 1）；Short 数据类型也可以像 byte 那样节省空间。一个short变量是int型变量所占空间的二分之一；默认值是 0；例子：short s = 1000，short r = -20000。 int： int 数据类型是32位、有符号的以二进制补码表示的整数；最小值是 -2,147,483,648（-2^31）；最大值是 2,147,483,647（2^31 - 1）；一般地整型变量默认为 int 类型；默认值是 0 ；例子：int a = 100000, int b = -200000。 long： long 数据类型是 64 位、有符号的以二进制补码表示的整数；最小值是 -9,223,372,036,854,775,808（-2^63）；最大值是 9,223,372,036,854,775,807（2^63 -1）；这种类型主要使用在需要比较大整数的系统上；默认值是 0L；例子： long a = 100000L，Long b = -200000L。“L”理论上不分大小写，但是若写成”l”容易与数字”1”混淆，不容易分辩。所以最好大写。 float： float 数据类型是单精度、32位、符合IEEE 754标准的浮点数；float 在储存大型浮点数组的时候可节省内存空间；默认值是 0.0f；浮点数不能用来表示精确的值，如货币；例子：float f1 = 234.5f。 double： double 数据类型是双精度、64 位、符合IEEE 754标准的浮点数；浮点数的默认类型为double类型；double类型同样不能表示精确的值，如货币；默认值是 0.0d；例子：double d1 = 123.4。 boolean： boolean数据类型表示一位的信息；只有两个取值：true 和 false；这种类型只作为一种标志来记录 true/false 情况；默认值是 false；例子：boolean one = true。 char： char类型是一个单一的 16 位 Unicode 字符；最小值是 \\u0000（即为 0）；最大值是 \\uffff（即为65、535）；char 数据类型可以储存任何字符；例子：char letter = ‘A’;。 类型转换整型、实型（常量）、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算。转换从低级到高级。低 ————————————&gt; 高byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double数据类型转换必须满足如下规则： 不能对boolean类型进行类型转换。 不能把对象类型转换成不相关类的对象。 在把容量大的类型转换为容量小的类型时必须使用强制类型转换。 转换过程中可能导致溢出或损失精度，例如： int i =128; byte b = (byte)i;","categories":[],"tags":[]},{"title":"markdown模板","slug":"markdown","date":"2021-05-07T05:42:37.943Z","updated":"2021-05-07T05:55:38.126Z","comments":true,"path":"2021/05/07/markdown/","link":"","permalink":"https://wys1728713796.github.io/2021/05/07/markdown/","excerpt":"","text":"系列文章目录提示：这里可以添加系列文章的所有文章的目录，目录需要自己手动添加例如：第一章 Python 机器学习入门之pandas的使用 前言提示：这里可以添加本文要记录的大概内容：例如：随着人工智能的不断发展，机器学习这门技术也越来越重要，很多人都开启了学习机器学习，本文就介绍了机器学习的基础内容。 总结提示：这里对文章进行总结：例如：以上就是今天要讲的内容，本文仅仅简单介绍了pandas的使用，而pandas提供了大量能使我们快速便捷地处理数据的函数和方法。","categories":[],"tags":[]}],"categories":[],"tags":[]}